#foreach ($component in $components)
  #if(${component.type} == "SECTION")
    #set($section_component = $component)
    #break
  #end
#end

<template>
    <a-card :body-style="{padding: '24px 32px'}" :bordered="false">
            <a-form :form="form">
                <a-row :gutter="16">
#foreach($field in $section_component.fields)
#if(${field.view.span} <= 6)
  #set($labelCol = 12)
  #set($wrapperCol = ${field.view.span} * 4 - 12)
                  <a-col :span="6">#elseif(${field.view.span} <=12)
  #set($labelCol = 6)
  #set($wrapperCol = ${field.view.span} * 2 - 6)
                  <a-col :span="12">#elseif(${field.view.span} <=18)
  #set($labelCol = 4)
  #set($tmp1 = ${field.view.span} * 1.33 - 4)
  #set($wrapperCol = $number.format("#0",$tmp1))
                  <a-col :span="18">#elseif(${field.view.span} <=24)
  #set($labelCol = 3)
  #set($wrapperCol = ${field.view.span} - 3)
                  <a-col :span="24">#else
  #set($labelCol = 3)
  #set($wrapperCol = 21)
<a-col :span="24">#end

                    <a-form-item
                        :labelCol="{span: $labelCol}"
                        :wrapperCol="{span: $wrapperCol}"
                        label="${field.label}"
                        hasFeedback >
#if(${field.inputType} == "select")
                        <a-select v-decorator="['${field.classname}', {}]" #if(${field.view.placeholder}) placeholder="${field.view.placeholder}"#end>
                            <a-select-option v-for="d in selectOptions['${field.dictName}']" :key="d.value">{{d.text}}</a-select-option>
                        </a-select>
#else
                        <a-input #if(${field.view.placeholder}) placeholder="${field.view.placeholder}"#end v-decorator="['${field.classname}', {}]" />
#end
                    </a-form-item>
                  </a-col>
  #if(${field.view.newLine})
                </a-row>
                <a-row :gutter="16">
  #end
#end
                </a-row>
                <a-form-item :wrapperCol="{ span: 24 }" style="text-align: center">
                    <a-button type="primary" @click="clickSave" icon="save">保存</a-button>
                    <a-button style="margin-left: 8px" @click="clickCancel" icon="close">关闭</a-button>
                </a-form-item>
            </a-form>
    </a-card>
</template>

<script>
    import { httpAction } from '@/api/manage'
    import {dicts} from '@/config/MdaDictionary.js'
    import eventBus from '@/utils/eventBus.js'
    // import pick from 'lodash.pick'
    // import moment from "moment"

    export default {
        data () {
            return {
                title:"操作",
                visible: false,
                selectOptions: {},
                model: {},
                type: 'add',
                eventName: '',
                // confirmLoading: false,
                form: this.$form.createForm(this),
                validatorRules:{
                },
                url: {
                    add: "/${module}/${table.classname}/add",
                    edit: "/${module}/${table.classname}/edit",
                },
            }
        },
        created () {
            this.selectOptions = dicts;
            this.type = this.$route.params.type;
            this.eventName = this.$route.params.eventName;
            if (this.type == 'edit') {
                this.edit(this.$route.params.record);
            }
            else {
                this.add();
            }
        },
        methods: {
            add () {
                this.edit({});
            },
            edit (record) {
                this.form.resetFields();
                this.model = Object.assign({}, record);
                this.visible = true;
                this.$nextTick(() => {
#foreach($field in $section_component.fields)
                    #if(${field.type} == "datetime")
                        this.form.setFieldsValue({${field.classname}:this.model.${field.classname}?moment(this.model.${field.classname},'YYYY-MM-DD HH:mm:ss'):null})
                    #elseif(${field.type} == "date")
                        this.form.setFieldsValue({${field.classname}:this.model.${field.classname}?moment(this.model.${field.classname}):null})
                    #else
                        this.form.setFieldsValue({${field.classname}:this.model.${field.classname}})
                    #end
#end
                });

            },
            close () {
                this.$emit('close');
                this.visible = false;
            },
            clickSave () {
                const that = this;
                // 触发表单验证
                this.form.validateFields((err, values) => {
                    if (!err) {
                        // that.confirmLoading = true;
                        let httpurl = '';
                        let method = '';
                        if(!this.model.${table.primaryKeyField.classname}){
                            httpurl+=this.url.add;
                            method = 'post';
                        }else{
                            httpurl+=this.url.edit;
                            method = 'put';
                        }
                        let formData = Object.assign(this.model, values);
                        //时间格式化
#foreach($field in $section_component.fields)
                      #if(${field.type} == "datetime")
                          formData.${field.classname} = formData.${field.classname}?formData.${field.classname}.format('YYYY-MM-DD HH:mm:ss'):null;
                      #elseif(${field.type} == "date")
                          formData.${field.classname} = formData.${field.classname}?formData.${field.classname}.format():null;
                      #else
                      #end
#end
                        console.log(formData)
                        httpAction(httpurl,formData,method).then((res)=>{
                            if(res.success){
                                that.${usd}message.success(res.message);
                                // that.${usd}emit('ok');
                            }else{
                                that.${usd}message.warning(res.message);
                            }
                        }).finally(() => {
                            // that.confirmLoading = false;
                            // let params = {type:this.type,record:formData};
                            //  eventBus.$emit(this.eventName, params);
                            that.$router.go(-1);
                        })



                    }
                })
            },
            clickCancel () {
                this.$router.go(-1);
            },


        }
    }
</script>

<style scoped>

</style>